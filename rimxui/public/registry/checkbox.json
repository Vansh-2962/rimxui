{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkbox",
  "type": "registry:component",
  "dependencies": [
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "src/components/Checkbox/Checkbox.tsx",
      "content": "import React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { mc } from \"@utils\";\r\n\r\nconst checkboxVariants = cva(\r\n  \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"\",\r\n        outline: \"border-2\",\r\n        filled: \"border-0 bg-muted\",\r\n      },\r\n      colorScheme: {\r\n        // Changed from 'color' to 'colorScheme'\r\n        primary: \"text-primary border-primary focus-visible:ring-primary\",\r\n        secondary:\r\n          \"text-secondary border-secondary focus-visible:ring-secondary\",\r\n        destructive:\r\n          \"text-destructive border-destructive focus-visible:ring-destructive\",\r\n        success: \"text-success border-success focus-visible:ring-success\",\r\n      },\r\n      size: {\r\n        sm: \"h-3 w-3\",\r\n        default: \"h-4 w-4\",\r\n        lg: \"h-5 w-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      colorScheme: \"primary\", // Updated from 'color'\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface CheckboxProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\" | \"color\">, // Added 'color' to Omit\r\n    VariantProps<typeof checkboxVariants> {\r\n  label?: string;\r\n  labelPosition?: \"left\" | \"right\";\r\n  indeterminate?: boolean;\r\n}\r\n\r\nconst Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\r\n  (\r\n    {\r\n      className,\r\n      variant,\r\n      colorScheme,\r\n      size,\r\n      label,\r\n      labelPosition = \"right\",\r\n      indeterminate,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    return (\r\n      <label className=\"flex items-center gap-2 cursor-pointer\">\r\n        {label && labelPosition === \"left\" && (\r\n          <span className=\"text-sm font-medium text-foreground\">{label}</span>\r\n        )}\r\n        <input\r\n          type=\"checkbox\"\r\n          ref={ref}\r\n          className={mc(\r\n            checkboxVariants({ variant, colorScheme, size, className }), // Updated to colorScheme\r\n            indeterminate && \"bg-primary/20 border-primary/50\",\r\n          )}\r\n          {...props}\r\n        />\r\n        {label && labelPosition === \"right\" && (\r\n          <span className=\"text-sm font-medium text-foreground\">{label}</span>\r\n        )}\r\n      </label>\r\n    );\r\n  },\r\n);\r\nCheckbox.displayName = \"Checkbox\";\r\n\r\nexport { Checkbox };\r\n",
      "type": "registry:component",
      "target": "src/components/ui/Checkbox.tsx"
    }
  ]
}