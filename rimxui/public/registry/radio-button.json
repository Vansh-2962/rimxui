{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radio-button",
  "type": "registry:component",
  "dependencies": [
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "src/components/RadioButton/RadioButton.tsx",
      "content": "import * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { mc } from \"@/utils\";\r\n\r\n// Radio Group Context\r\ntype RadioGroupContextType = {\r\n  value: string;\r\n  onValueChange: (value: string) => void;\r\n  name: string;\r\n};\r\n\r\nconst RadioGroupContext = React.createContext<RadioGroupContextType | null>(\r\n  null,\r\n);\r\n\r\nfunction useRadioGroup() {\r\n  const context = React.useContext(RadioGroupContext);\r\n  if (!context) {\r\n    throw new Error(\"RadioGroupItem must be used within a RadioGroup\");\r\n  }\r\n  return context;\r\n}\r\n\r\n// Radio Item Variants\r\nconst radioItemVariants = cva(\r\n  \"peer h-4 w-4 rounded-full border  text-primary ring-offset-background focus:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"\",\r\n        outline: \"border-2\",\r\n      },\r\n      itemSize: {\r\n        sm: \"h-3 w-3\",\r\n        default: \"h-4 w-4\",\r\n        lg: \"h-5 w-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      itemSize: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\n// RadioGroup Component\r\ninterface RadioGroupProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onValueChange?: (value: string) => void;\r\n  disabled?: boolean;\r\n  name?: string;\r\n  required?: boolean;\r\n}\r\n\r\nconst RadioGroup = React.forwardRef<HTMLDivElement, RadioGroupProps>(\r\n  (\r\n    {\r\n      className,\r\n      defaultValue = \"\",\r\n      value: propValue,\r\n      onValueChange,\r\n      disabled = false,\r\n      name = `radio-group-${Math.random().toString(36).substring(2, 9)}`,\r\n      required = false,\r\n      children,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [internalValue, setInternalValue] = React.useState(defaultValue);\r\n    const isControlled = propValue !== undefined;\r\n    const value = isControlled ? propValue : internalValue;\r\n\r\n    const handleValueChange = (newValue: string) => {\r\n      if (!isControlled) {\r\n        setInternalValue(newValue);\r\n      }\r\n      onValueChange?.(newValue);\r\n    };\r\n\r\n    return (\r\n      <RadioGroupContext.Provider\r\n        value={{\r\n          value,\r\n          onValueChange: handleValueChange,\r\n          name,\r\n        }}\r\n      >\r\n        <div\r\n          ref={ref}\r\n          className={mc(\"grid gap-2\", className)}\r\n          role=\"radiogroup\"\r\n          aria-required={required}\r\n          data-disabled={disabled ? \"\" : undefined}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </div>\r\n      </RadioGroupContext.Provider>\r\n    );\r\n  },\r\n);\r\nRadioGroup.displayName = \"RadioGroup\";\r\n\r\n// RadioGroupItem Component\r\ninterface RadioGroupItemProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\r\n    VariantProps<typeof radioItemVariants> {\r\n  id: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst RadioGroupItem = React.forwardRef<HTMLInputElement, RadioGroupItemProps>(\r\n  (\r\n    {\r\n      className,\r\n      variant,\r\n      itemSize,\r\n      id,\r\n      value,\r\n      disabled = false,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const { value: groupValue, onValueChange, name } = useRadioGroup();\r\n    const isChecked = groupValue === value;\r\n\r\n    return (\r\n      <input\r\n        type=\"radio\"\r\n        className={mc(\r\n          radioItemVariants({ variant, itemSize, className }),\r\n          \"appearance-none\",\r\n          isChecked &&\r\n            \"relative before:content-[''] before:block before:w-2 before:h-2 before:rounded-full before:bg-primary before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2\",\r\n        )}\r\n        ref={ref}\r\n        id={id}\r\n        name={name}\r\n        value={value}\r\n        checked={isChecked}\r\n        onChange={() => onValueChange(value as string)}\r\n        disabled={disabled}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nRadioGroupItem.displayName = \"RadioGroupItem\";\r\n\r\nexport { RadioGroup, RadioGroupItem };\r\n",
      "type": "registry:component",
      "target": "src/components/ui/RadioButton.tsx"
    }
  ]
}